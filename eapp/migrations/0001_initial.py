# Generated by Django 4.2.5 on 2025-01-25 08:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recepient_name', models.CharField(max_length=100, null=True)),
                ('recepient_contact', models.CharField(max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BookingSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('is_booked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(default='customer', max_length=50)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('photo', models.ImageField(upload_to='instructors/')),
                ('rpc_number', models.CharField(max_length=50)),
                ('experience', models.TextField()),
                ('issued_date', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Shipped/Dispatched', 'Shipped/Dispatched'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded'), ('Returned', 'Returned'), ('On Hold', 'On Hold'), ('Backordered', 'Backordered'), ('Partially Shipped', 'Partially Shipped'), ('Awaiting Payment', 'Awaiting Payment'), ('Awaiting Fulfillment', 'Awaiting Fulfillment')], default='Pending', max_length=20)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.address')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('cost', models.DecimalField(decimal_places=2, default=100, max_digits=6)),
                ('image_1', models.ImageField(upload_to='product_images/')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('quantity_in_stock', models.PositiveIntegerField(default=0)),
                ('sku', models.PositiveIntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TotalAmount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('PurchaseOrderDate', models.DateField()),
                ('Status', models.CharField(blank=True, max_length=250)),
                ('ExpectedDeliveryDate', models.DateField(blank=True, null=True)),
                ('seller_message', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('drone_details', models.TextField()),
                ('slot_date', models.DateField(editable=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('slot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='eapp.bookingslot')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory_name', models.CharField(max_length=100)),
                ('parent_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_no', models.CharField(max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('address', models.CharField(max_length=255)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.IntegerField()),
                ('PurchaseUnitPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('TotalAmount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.product')),
                ('PurchaseOrder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.purchaseorder')),
            ],
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='Seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.seller'),
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.seller'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.subcategory'),
        ),
        migrations.CreateModel(
            name='POMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.product')),
                ('purchase_order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='eapp.purchaseorder')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.product')),
            ],
        ),
        migrations.AddField(
            model_name='bookingslot',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eapp.instructor'),
        ),
        migrations.AddField(
            model_name='address',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='eapp.customer'),
        ),
        migrations.CreateModel(
            name='InventoryProduct',
            fields=[
            ],
            options={
                'verbose_name': 'Inventory',
                'verbose_name_plural': 'Inventory',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('eapp.product',),
        ),
        migrations.AddConstraint(
            model_name='userbooking',
            constraint=models.UniqueConstraint(fields=('email', 'phone_number', 'slot_date'), name='unique_booking_per_day_per_user'),
        ),
        migrations.AddConstraint(
            model_name='bookingslot',
            constraint=models.UniqueConstraint(fields=('date', 'time'), name='unique_slot_per_datetime'),
        ),
    ]
